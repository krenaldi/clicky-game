{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Header/index.js","components/Score/index.js","App.js","index.js"],"names":["Card","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","Score","highscore","score","App","state","cards","gameOver","setState","forEach","card","count","alert","find","o","i","console","log","this","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"06BAGe,SAASA,EAAKC,GAC3B,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,U,MCA1BC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCD1B,SAASC,EAAOX,GAC7B,OAAO,wBAAIC,UAAU,SAASD,EAAMU,U,MCDvB,SAASE,EAAMZ,GAC1B,OAAO,yBAAKC,UAAU,SAAf,eAAoCD,EAAMa,UAA1C,WAA6Db,EAAMc,O,WC8D/DC,E,2MAzDbC,MAAQ,CACNC,QACAH,MAAO,EACPD,UAAW,G,EAGbK,SAAW,WAST,OARI,EAAKF,MAAMF,MAAQ,EAAKE,MAAMH,WAChC,EAAKM,SAAS,CAAEN,UAAW,EAAKG,MAAMF,QAExC,EAAKE,MAAMC,MAAMG,SAAQ,SAAAC,GACvBA,EAAKC,MAAQ,KAEfC,MAAM,sBAAD,OAAuB,EAAKP,MAAMF,QACvC,EAAKK,SAAS,CAAEL,MAAO,KAChB,G,EAKTX,WAAa,SAAAC,GACX,EAAKY,MAAMC,MAAMO,MAAK,SAACC,EAAGC,GACxB,GAAID,EAAErB,KAAOA,EAAI,CACf,GAAuB,IAAnBa,EAAMS,GAAGJ,MAMX,OALAL,EAAMS,GAAGJ,MAAQL,EAAMS,GAAGJ,MAAQ,EAClC,EAAKH,SAAS,CAAEL,MAAO,EAAKE,MAAMF,MAAQ,IAAK,WAC7Ca,QAAQC,IAAIC,KAAKb,MAAMF,UAEzB,EAAKE,MAAMC,MAAMa,MAAK,kBAAMC,KAAKC,SAAW,OACrC,EAEP,EAAKd,gB,wEAOH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAACP,EAAD,+BAEA,kBAACC,EAAD,CAAOC,UAAWgB,KAAKb,MAAMH,UAAWC,MAAOe,KAAKb,MAAMF,QACzDe,KAAKb,MAAMC,MAAMgB,KAAI,SAAAZ,GAAI,OACxB,kBAACtB,EAAD,CACEI,WAAY,EAAKA,WACjBC,GAAIiB,EAAKjB,GACT8B,IAAKb,EAAKjB,GACVI,MAAOa,EAAKb,gB,GAnDN2B,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5c810585.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default function Card(props) {\n  return (\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Header(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Score(props) {\n    return <div className=\"score\">High Score: {props.highscore} Score: {props.score}</div>\n} ","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Score from \"./components/Score\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score })\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over \\nScore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  }\n\n\n  // Find and randomly arrange this.state.card for cards after each click\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  };\n\n  // Map over this.state.cards and render a Card component for each Card object\n  render() {\n    return (\n      <Wrapper>\n        <Header>Family Guy Clicky Game\n        </Header>\n        <Score highscore={this.state.highscore} score={this.state.score} />\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}